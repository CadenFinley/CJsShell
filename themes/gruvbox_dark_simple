theme_definition "gruvbox_dark_simple" {
  terminal_title "{SHELL} {SHELL_VER} | {USERNAME}@{HOSTNAME}"

  fill {
    char "",
    fg RESET
    bg RESET
  }

  requirements {
    colors "true_color"
    fonts "FiraCode Nerd Font"
    fonts "Hack Nerd Font"
    fonts "JetBrains Mono"
    fonts "Source Code Pro"
  }

  ps1 {
    segment "userseg" {
      content " {USERNAME} "
      fg "#ebdbb2"
      bg "#282828"
      separator "\uE0B0"
      separator_fg "#282828"
      separator_bg "#3c3836"
      forward_separator "\uE0B6"
      forward_separator_fg "#282828"
      forward_separator_bg RESET
      alignment "left"
    }

    segment "hostseg" {
      content " {HOSTNAME} "
      fg "#ebdbb2"
      bg "#3c3836"
      separator "\uE0B0"
      separator_fg "#3c3836"
      separator_bg "#504945"
      alignment "left"
    }

    segment "dirseg" {
      content " {PATH} "
      fg "#ebdbb2"
      bg "#504945"
      separator "\uE0B0"
      separator_fg "#504945"
      separator_bg "#3c3836"
      alignment "left"
    }

    segment "statusseg" {
      content " [{STATUS}] "
      fg "{if = {STATUS} == 0 ? #008000 : #fb4934}"
      bg "#3c3836"
      separator "\uE0B0"
      separator_fg "#3c3836"
      separator_bg "#3c3836"
      alignment "left"
    }

    segment "durationseg" {
      content "in {CMD_DURATION} "
      fg "#ebdbb2"
      bg "#3c3836"
      separator "\uE0B0"
      separator_fg "#3c3836"
      separator_bg RESET
      alignment "left"
    }
  }

  git_segments {
    segment "userseg" {
      content " {USERNAME} "
      fg "#ebdbb2"
      bg "#282828"
      separator "\uE0B0"
      separator_fg "#282828"
      separator_bg "#3c3836"
      forward_separator "\uE0B6"
      forward_separator_fg "#282828"
      forward_separator_bg RESET
      alignment "left"
    }

    segment "dirseg" {
      content " {LOCAL_PATH} "
      fg "#ebdbb2"
      bg "#3c3836"
      separator "\uE0B0"
      separator_fg "#3c3836"
      separator_bg "{if = {IS_PYTHON_PROJECT} == 'true' ? #504945 : {if = {IS_NODEJS_PROJECT} == 'true' ? #504945 : {if = {IS_RUST_PROJECT} == 'true' ? #504945 : {if = {IS_GOLANG_PROJECT} == 'true' ? #504945 : {if = {IS_JAVA_PROJECT} == 'true' ? #504945 : {if = {IS_CPP_PROJECT} == 'true' ? #504945 : {if = {IS_CSHARP_PROJECT} == 'true' ? #504945 : {if = {IS_PHP_PROJECT} == 'true' ? #504945 : {if = {IS_RUBY_PROJECT} == 'true' ? #504945 : {if = {IS_KOTLIN_PROJECT} == 'true' ? #504945 : {if = {IS_SWIFT_PROJECT} == 'true' ? #504945 : {if = {IS_DART_PROJECT} == 'true' ? #504945 : {if = {IS_SCALA_PROJECT} == 'true' ? #504945 : #665c54}}}}}}}}}}}}}"
      alignment "left"
    }

    segment "langseg" {
      content " {if = {IS_PYTHON_PROJECT} == 'true' ?🐍 {PYTHON_VERSION} :}{if = {IS_NODEJS_PROJECT} == 'true' ?⚡ {NODEJS_VERSION} :}{if = {IS_RUST_PROJECT} == 'true' ?🦀 {RUST_VERSION} :}{if = {IS_GOLANG_PROJECT} == 'true' ?🐹 {GOLANG_VERSION} :}{if = {IS_JAVA_PROJECT} == 'true' ?☕ {JAVA_VERSION} :}{if = {IS_CPP_PROJECT} == 'true' ?⚙️ {CPP_VERSION} :}{if = {IS_CSHARP_PROJECT} == 'true' ?🔷 {CSHARP_VERSION} :}{if = {IS_PHP_PROJECT} == 'true' ?🐘 {PHP_VERSION} :}{if = {IS_RUBY_PROJECT} == 'true' ?💎 {RUBY_VERSION} :}{if = {IS_KOTLIN_PROJECT} == 'true' ?🎯 {KOTLIN_VERSION} :}{if = {IS_SWIFT_PROJECT} == 'true' ?🦉 {SWIFT_VERSION} :}{if = {IS_DART_PROJECT} == 'true' ?🎯 {DART_VERSION} :}{if = {IS_SCALA_PROJECT} == 'true' ?📈 {SCALA_VERSION} :}"
      fg "#83a598"
      bg "#504945"
      separator "\uE0B0"
      separator_fg "#504945"
      separator_bg "#665c54"
      alignment "left"
    }

    segment "gitseg" {
      content " {GIT_BRANCH} "
      fg "#fabd2f"
      bg "#665c54"
      separator "\uE0B0"
      separator_fg "#665c54"
      separator_bg "#7c6f64"
      alignment "left"
    }

    segment "gitstatusseg" {
      content " {GIT_STATUS} "
      fg "{if = {GIT_STATUS} == '✓' ? #b8bb26 : #fb4934}"
      bg "#7c6f64"
      separator "\uE0B0"
      separator_fg "#7c6f64"
      separator_bg "#3c3836"
      alignment "left"
    }

    segment "statusseg" {
      content " [{STATUS}] "
      fg "{if = {STATUS} == 0 ? #008000 : #fb4934}"
      bg "#3c3836"
      separator "\uE0B0"
      separator_fg "#3c3836"
      separator_bg "#3c3836"
      alignment "left"
    }

    segment "durationseg" {
      content "in {CMD_DURATION} "
      fg "#ebdbb2"
      bg "#3c3836"
      separator "\uE0B0"
      separator_fg "#3c3836"
      separator_bg RESET
      alignment "left"
    }
  }

  ai_segments {
    segment "ai_userseg" {
      content " {AI_MODEL} "
      fg "#d3869b"
      bg "#282828"
      separator "\uE0B0"
      separator_fg "#282828"
      separator_bg "#3c3836"
      forward_separator "\uE0B6"
      forward_separator_fg "#282828"
      forward_separator_bg RESET
      alignment "left"
    }

    segment "ai_typeseg" {
      content " {AI_AGENT_TYPE} "
      fg "#8ec07c"
      bg "#3c3836"
      separator "\uE0B0"
      separator_fg "#3c3836"
      separator_bg "{if = {IS_PYTHON_PROJECT} == 'true' ? #504945 : {if = {IS_NODEJS_PROJECT} == 'true' ? #504945 : {if = {IS_RUST_PROJECT} == 'true' ? #504945 : {if = {IS_GOLANG_PROJECT} == 'true' ? #504945 : {if = {IS_JAVA_PROJECT} == 'true' ? #504945 : {if = {IS_CPP_PROJECT} == 'true' ? #504945 : {if = {IS_CSHARP_PROJECT} == 'true' ? #504945 : {if = {IS_PHP_PROJECT} == 'true' ? #504945 : {if = {IS_RUBY_PROJECT} == 'true' ? #504945 : {if = {IS_KOTLIN_PROJECT} == 'true' ? #504945 : {if = {IS_SWIFT_PROJECT} == 'true' ? #504945 : {if = {IS_DART_PROJECT} == 'true' ? #504945 : {if = {IS_SCALA_PROJECT} == 'true' ? #504945 : #665c54}}}}}}}}}}}}}"
      alignment "left"
    }

    segment "ai_langseg" {
      content " {if = {IS_PYTHON_PROJECT} == 'true' ?🐍 {PYTHON_VERSION} :}{if = {IS_NODEJS_PROJECT} == 'true' ?⚡ {NODEJS_VERSION} :}{if = {IS_RUST_PROJECT} == 'true' ?🦀 {RUST_VERSION} :}{if = {IS_GOLANG_PROJECT} == 'true' ?🐹 {GOLANG_VERSION} :}{if = {IS_JAVA_PROJECT} == 'true' ?☕ {JAVA_VERSION} :}{if = {IS_CPP_PROJECT} == 'true' ?⚙️ {CPP_VERSION} :}{if = {IS_CSHARP_PROJECT} == 'true' ?🔷 {CSHARP_VERSION} :}{if = {IS_PHP_PROJECT} == 'true' ?🐘 {PHP_VERSION} :}{if = {IS_RUBY_PROJECT} == 'true' ?💎 {RUBY_VERSION} :}{if = {IS_KOTLIN_PROJECT} == 'true' ?🎯 {KOTLIN_VERSION} :}{if = {IS_SWIFT_PROJECT} == 'true' ?🦉 {SWIFT_VERSION} :}{if = {IS_DART_PROJECT} == 'true' ?🎯 {DART_VERSION} :}{if = {IS_SCALA_PROJECT} == 'true' ?📈 {SCALA_VERSION} :}"
      fg "#83a598"
      bg "#504945"
      separator "\uE0B0"
      separator_fg "#504945"
      separator_bg "#665c54"
      alignment "left"
    }

    segment "ai_dirseg" {
      content " {DIRECTORY} "
      fg "#ebdbb2"
      bg "#665c54"
      separator "\uE0B0"
      separator_fg "#665c54"
      separator_bg "#3c3836"
      alignment "left"
    }

    segment "ai_contextseg" {
      content " {AI_CONTEXT_COMPARISON} "
      fg "#ebdbb2"
      bg "#3c3836"
      separator "\uE0B0"
      separator_fg "#3c3836"
      separator_bg RESET
      alignment "left"
    }
  }

  newline {
    segment "promptseg" {
      content " > "
      fg "#b8bb26"
      bg RESET
      separator ""
      separator_fg RESET
      separator_bg RESET
    }
  }

  behavior {
    cleanup true
    cleanup_empty_line false
    newline_after_execution true
  }
}
 