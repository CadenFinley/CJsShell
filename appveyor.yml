version: '{build}'

# Build only on Linux (Unix-only support)
image:
  - Ubuntu

# Only build the master branch
branches:
  only:
    - master

# Clone depth
clone_depth: 5

# Cache to speed up builds
cache:
  - '$HOME/.ccache'

environment:
  matrix:
    - platform: x64
      configuration: Release

install:
  # Linux dependencies
  - sh: |
      echo Installing Linux dependencies...
      sudo apt-get update
      sudo apt-get install -y build-essential cmake
      # Install 32-bit libraries if building for x86
      if [ "$platform" = "x86" ]; then
        chmod +x tool-scripts/linux_build_helper.sh
        sudo ./tool-scripts/linux_build_helper.sh install-32bit
      fi
      # Install nlohmann/json from GitHub
      mkdir -p external/nlohmann
      wget -O external/nlohmann/json.hpp https://github.com/nlohmann/json/releases/download/v3.11.2/json.hpp
      # Verify json.hpp was downloaded correctly
      ls -la external/nlohmann/
      head -n 10 external/nlohmann/json.hpp
      sudo apt-get install -y libcurl4-openssl-dev
      # Make sure we have the dynamic loading library
      sudo apt-get install -y libdl-dev || echo "libdl is part of glibc-dev, continuing..."

before_build:
  # Linux build preparation
  - sh: |
      mkdir build
      cd build
      if [ "$platform" = "x86" ]; then
        # For 32-bit builds
        export CFLAGS="-m32"
        export CXXFLAGS="-m32"
        # Force the arch to be x86
        cmake .. -DCMAKE_BUILD_TYPE=$configuration -DCMAKE_CXX_FLAGS="-m32" -DCMAKE_C_FLAGS="-m32" -DFORCE_32BIT=ON -DNLOHMANN_JSON_INCLUDE_DIR="$APPVEYOR_BUILD_FOLDER/external"
      else
        cmake .. -DCMAKE_BUILD_TYPE=$configuration -DNLOHMANN_JSON_INCLUDE_DIR="$APPVEYOR_BUILD_FOLDER/external"
      fi
      if [ $? -ne 0 ]; then exit 1; fi

build_script:
  # Linux build
  - sh: |
      cmake --build . --config $configuration -- -j $(nproc)

after_build:
  # Linux packaging
  - sh: |
      cd $APPVEYOR_BUILD_FOLDER/build
      tar -czf CJsShell-Unix.tar.gz cjsh
      appveyor PushArtifact CJsShell-Unix.tar.gz

# Run the shell tests
test_script:
  - sh: |
      cd $APPVEYOR_BUILD_FOLDER
      chmod +x run_shell_tests.sh
      ./run_shell_tests.sh

# Artifacts to save
artifacts:
  - path: build/CJsShell-Unix.tar.gz
    name: CJsShell-Unix

# Notifications
notifications:
  - provider: Email
    to:
      - caden@cadenfinley.com
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: true
