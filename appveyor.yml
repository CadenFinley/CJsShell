version: '{build}'

# Build only on Linux (Unix-only support)
image:
  - Ubuntu

# Only build the master branch
branches:
  only:
    - master

# Clone depth
clone_depth: 5

# Cache to speed up builds
cache:
  - '$HOME/.ccache'

environment:
  matrix:
    - platform: x64
      configuration: Release

install:
  # Linux-specific setup
  - sh: |
      echo Installing Linux dependencies...
      sudo apt-get update
      sudo apt-get install -y build-essential cmake
      # Always use the latest version of nlohmann/json from GitHub
      mkdir -p external/nlohmann
      wget -O external/nlohmann/json.hpp https://github.com/nlohmann/json/releases/download/v3.11.2/json.hpp
      sudo apt-get install -y libcurl4-openssl-dev
      # Make sure we have the dynamic loading library
      sudo apt-get install -y libdl-dev || echo "libdl is part of glibc-dev, continuing..."

before_build:
  # Linux build preparation
  - sh: |
      mkdir build
      cd build
      cmake .. -DCMAKE_BUILD_TYPE=$configuration
      if [ $? -ne 0 ]; then exit 1; fi

build_script:
  # Linux build
  - sh: |
      cmake --build . --config $configuration -- -j $(nproc)

after_build:
  # Linux packaging
  - sh: |
      cd $APPVEYOR_BUILD_FOLDER/build
      tar -czf DevToolsTerminal-Unix.tar.gz DevToolsTerminal
      appveyor PushArtifact DevToolsTerminal-Unix.tar.gz

# Run the tests if you have them
test_script:
  - sh: |
      cd $APPVEYOR_BUILD_FOLDER/build
      ctest -C $configuration -VV

# Artifacts to save
artifacts:
  - path: build\DevToolsTerminal-Unix.tar.gz
    name: DevToolsTerminal-Unix

# Notifications
notifications:
  - provider: Email
    to:
      - caden@cadenfinley.com
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: true
