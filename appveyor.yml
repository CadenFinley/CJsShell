version: '{build}'

# Build only on Linux (Unix-only support)
image:
  - Ubuntu

# Only build the master branch
branches:
  only:
    - master

# Clone depth
clone_depth: 5

# Cache to speed up builds
cache:
  - '$HOME/.ccache'

environment:
  matrix:
    - platform: x64
      configuration: Release

install:
  # Linux dependencies
  - sh: |
      echo Installing Linux dependencies...
      sudo apt-get update
      sudo apt-get install -y build-essential
      # Install 32-bit libraries if building for x86
      sudo apt-get install -y libcurl4-openssl-dev
      # Make sure we have the dynamic loading library
      sudo apt-get install -y libdl-dev || echo "libdl is part of glibc-dev, continuing..."

before_build:
  # Linux build preparation - using nob build system
  - sh: |
      echo "Building with nob build system..."
      cd $APPVEYOR_BUILD_FOLDER/toolchain/nob
      # Build nob if it doesn't exist
      if [ ! -f "./nob" ]; then
        echo "Building nob..."
        cc -o nob nob.c
        if [ $? -ne 0 ]; then
          echo "Failed to compile nob"
          exit 1
        fi
      fi

build_script:
  # Linux build using nob
  - sh: |
      cd $APPVEYOR_BUILD_FOLDER/toolchain
      chmod +x build.sh
      ./build.sh

after_build:
  # Linux packaging
  - sh: |
      cd $APPVEYOR_BUILD_FOLDER/build
      tar -czf CJsShell-Unix.tar.gz cjsh
      appveyor PushArtifact CJsShell-Unix.tar.gz

# Run the shell tests
test_script:
  - sh: |
      cd $APPVEYOR_BUILD_FOLDER
      chmod +x tests/run_shell_tests.sh
      # Run the test suite and show output in CI logs
      echo "Running test suite..."
      ./tests/run_shell_tests.sh

# Artifacts to save
artifacts:
  - path: build/CJsShell-Unix.tar.gz
    name: CJsShell-Unix

# Notifications
notifications:
  - provider: Email
    to:
      - caden@cadenfinley.com
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: true
